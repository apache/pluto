<?xml version="1.0"?>
<!-- 
Copyright 2004 The Apache Software Foundation
Licensed  under the  Apache License,  Version 2.0  (the "License");
you may not use  this file  except in  compliance with the License.
You may obtain a copy of the License at 

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed  under the  License is distributed on an "AS IS" BASIS,
WITHOUT  WARRANTIES OR CONDITIONS  OF ANY KIND, either  express  or
implied.

See the License for the specific language governing permissions and
limitations under the License.
-->
<document>
  <properties>
    <author email="unknown">Jean-Baptiste Joret</author>
    <author email="david.AT.daviddewolf.DOT.com">David H. DeWolf</author>
    <title>Pluto Project</title>
  </properties>

<body>
  <section name="Pluto">

<p>The project is currently moving out of the 
  <a href="http://incubator.apache.org/">Apache Incubator</a> into the
  <a href="http://portals.apache.org">Portals projects</a>.
</p>

<p>Pluto is the Reference Implementation of the Java Portlet
   Specfication. The current version of this specification is
   <a href="http://jcp.org/en/jsr/detail?id=168">JSR 168</a>.
</p>

<p>Portlets are designed to run in the context of a portal.
   They are written to the Portlet API which are similar to the Servlet API.</p>

<p>In contrast to servlets, portlets may not do things like sending
    redirects or errors to browsers directly, forwarding requests or
    writing arbitrary markup to the output stream to assure that they
    don&#8217;t distract the portal web application which uses them.
    Another difference compared to servlets is that portlets rely on
    portal specific infrastructure functions such as access to user
    profile information, standard interface for storing/retrieving
    persistent settings, getting client information, etc. Generally,
    portlets are administrated more dynamically than servlets typically
    are.
</p>

<p>A portlet container provides a runtime environment for portlets
   implemented according to the Portlet API. In this environment
   portlets can be instantiated, used and finally destroyed.  The
   portlet container is not a stand-alone container like the
   servlet container; instead it is implemented as a thin layer on
   top of the servlet container and reuses the functionality
   provided by the servlet container.
</p>

<p>Pluto serves as portlet container that implements the Portlet
   API and offers developers a working example platform from which
   they can test their portlets. However, it's cumbersome to execute
   and test the portlet container without a driver, in this case,
   the portal. Pluto's simple portal component is built only on
   the portlet container's and the JSR 168's requirements. (In
   contrast, the more sophisticated,
   <a href="http://jakarta.apache.org/jetspeed/site/index.html">Jetspeed</a>
   project concentrates on the portal itself rather than the portlet
   container, and considers requirements from other groups.)
</p>
</section>

<section name="Pluto Versions">
<p>Pluto Versions</p>
<table>
<tr><th>Portlet Spec</th><th>Pluto Version</th></tr>
<tr><td>1.0</td><td>1.0</td></tr>
</table>
</section>

<section name="Compilation / Installation">
<p><b><i>Installation Procedure:</i></b>
<!--   <li>Download the source code of Apache Pluto
           <a href="http://jakarta.apache.org/site/sourceindex.cgi">here</a></li> -->
   <ul>
   <li><a href="install.html">Installing Pluto</a></li>
   </ul>
</p>

<p><b><i>Prereq's:</i></b>
   <ul>
   <li>The Pluto Project requires at least Apache Tomcat 4.1.27 and Java 1.3.1.
Some <a href="http://nagoya.apache.org/wiki/apachewiki.cgi?PlutoProjectPages/WorkingConfigurations">other configurations</a> have been tested successfully as well.
</li>
   <li>To build you will need to have Apache Maven 1.0-beta-10</li>
   </ul>
</p>


</section>
</body>
</document>

