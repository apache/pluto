<!--
	Ant build file for deploying individual portlets to the binary distribution
	(which includes Tomcat 5) of Pluto ver 1.0.1. Release Candidate.

	This script depends on setting the CATALINA_HOME to the full
	path to where the pluto-1.0.1 binary distribution is installed.

	Run this build inputing the path to the war file (including file name)
	when prompted by the input task or using the full command line:
	ant -Dfull.war.path=<path_to_war_file>. Alternatively,
	you can set the full.war.path property in build.properties.

	Use Ant version 1.6+ to run this build.

	Here's how to call this script inside of your portlet application Ant build:
        <target name="deploy-pluto" description="Deploy portlet application to Pluto" depends="war">
 		<ant dir="${env.CATALINA_HOME}/portlet-deploy" inheritall="false">
 			<property name="full.war.path" value="${basedir}/${war.name}"/>
 		</ant>
 	</target>
	Setting the full.war.path property inside this ant task causes the input task to be
	skipped inside of the get-war-path target of this file.


	author: Craig Doremus (craig-at-maine.com)
-->
<project default="deploy" name="portlet-deploy" basedir=".">

	<property environment="env" description="To pick up environmental variables"/>
	<property file="build.properties" description="Properties file"/>
	<property name="this.dir" value="portlet-deploy" description="Current directory"/>
	<property name="pluto-context" value="pluto" description="Web context name for pluto webapp"/>
	<property name="lib.dir" value="lib" description="Holds libraries used for deployment"/>


	<path description="Deployent classpath" id="deploy.classpath">
		<pathelement location="${env.CATALINA_HOME}/webapps/${pluto-context}/WEB-INF/classes"/>
		<fileset dir="${lib.dir}">
			<include name="*.*"/>
		</fileset>
		<fileset dir="${env.CATALINA_HOME}/shared/lib">
			<!-- <include name="pluto-1.0.1.jar"/> -->
			<include name="pluto-*.jar"/>
			<include name="portlet-api-1.0.jar"/>
		</fileset>
	</path>

	<target name="init">
		<fail unless="env.CATALINA_HOME"
			message="CATALINA_HOME must be set to the Tomcat installation home directory"/>
		<property name="tomcat.home" value="${env.CATALINA_HOME}"/>
		<echo>
		Pluto version 1.0.1 deployment build
	This script deploys a portlet application packaged
	in a war file with a proper web.xml and portlet.xml file.
	Pluto installation home: ${tomcat.home}
		</echo>
		<mkdir dir="${lib.dir}" description="Creates dir for libraries, if it is not present"/>
		<!--
		Check if dependencies are available.
		-->
		  <condition property="noget">
		    <and>
			<available filepath="${lib.dir}" file="castor-0.9.5.jar" />
			<available filepath="${lib.dir}" file="regexp-1.3-dev.jar" />
			<available filepath="${lib.dir}" file="servletapi-2.3.jar" />
			<available filepath="${lib.dir}" file="xerces-2.4.0.jar" />
			<available filepath="${lib.dir}" file="xml-apis-2.0.2.jar" />
		    </and>
		  </condition>

	</target>

	<target name="get-war-path" depends="init,get-deps">
		<input
		message="Enter the full path to the portlet war file (including file name):"
		addproperty="full.war.path"/>

	</target>

	<target name="deploy-portlet-war" depends="get-war-path">
		<!-- Check that the file that is the value of full.war.path exists -->
		<condition property="path.set" value="true">
		   <and>
			<isset property="full.war.path"/>
		     <not>
		     	<equals arg1="${full.war.path}" arg2="" trim="true"/>
		     </not>
		        <available file="${full.war.path}"/>
		   </and>
		</condition>
		<fail message="The property full.war.path has not been set or the war file does not exist."
			unless="path.set"/>

		<echo message="File to be deployed: ${full.war.path}"/>
		<!-- Run the deploy class -->
		 <java classname="org.apache.pluto.portalImpl.Deploy" fork="yes">
		  <classpath>
		    <path refid="deploy.classpath"/>
		  </classpath>
		    <arg value="${tomcat.home}/webapps" />
		    <arg value="pluto" />
		    <arg value="${full.war.path}" />
		    <arg value="${basedir}" />
		 </java>
	</target>

 	<target name="deploy" depends="deploy-portlet-war">
 		<echo>
 	Deployment done!
 	If this is the first time you have done the deployment,
 	please make sure you edit portletentityregistry.xml and
 	pageregistry.xml in ${tomcat.home}/webapps/pluto/WEB-INF/data
 	to register your portlet with Pluto and add it to
 	the page layout.
 		</echo>
 	</target>


  <target name="get-deps" unless="noget">
    <get dest="${lib.dir}/castor-0.9.5.jar" usetimestamp="true" ignoreerrors="false" src="http://www.ibiblio.org/maven/castor/jars/castor-0.9.5.jar">
    </get>
    <get dest="${lib.dir}/regexp-1.3-dev.jar" usetimestamp="true" ignoreerrors="false" src="http://www.ibiblio.org/maven/regexp/jars/regexp-1.3-dev.jar">
    </get>
    <get dest="${lib.dir}/servletapi-2.3.jar" usetimestamp="true" ignoreerrors="false" src="http://www.ibiblio.org/maven/servletapi/jars/servletapi-2.3.jar">
    </get>
    <get dest="${lib.dir}/xerces-2.4.0.jar" usetimestamp="true" ignoreerrors="false" src="http://www.ibiblio.org/maven/xerces/jars/xerces-2.4.0.jar">
    </get>
    <get dest="${lib.dir}/xml-apis-2.0.2.jar" usetimestamp="true" ignoreerrors="false" src="http://www.ibiblio.org/maven/xml-apis/jars/xml-apis-2.0.2.jar">
    </get>
  </target>

</project>
